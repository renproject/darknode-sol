// tslint:disable

type Log = any;
type Provider = any;
type TransactionReceipt = any;
type Tx = any;

export interface Transaction { receipt: TransactionReceipt; tx: string; logs: Log[]; }

type BigNumber = string | number;

{{#if events}}
export const {{contractName}}Events = {
    {{#each events}}
    {{> event}}
    {{/each}}
};
{{/if}}

export interface {{contractName}}Contract {
{{#each methods}}
    {{#this.constant}}
    {{this.tsName}}({{> typed_params inputs=inputs}}): Promise<{{> return_type outputs=outputs}}>;
    {{/this.constant}}
    {{^this.constant}}
    {{this.tsName}}({{> typed_params inputs=inputs}}): Promise<Transaction>;
    {{/this.constant}}
{{/each}}
    address: string;
}

export interface {{contractName}}Artifact {
    new(address: string): {{contractName}}Contract;
    address: string;
    "new"({{> typed_params inputs=ctor.inputs}}): Promise<{{contractName}}Contract>;
    at(address: string): Promise<{{contractName}}Contract>;
    deployed(): Promise<{{contractName}}Contract>;
    setProvider(provider: Provider): void;
}
