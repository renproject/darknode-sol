{
  "contractName": "ECDSA",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. * These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x96b7a000144f61405cfc9cd7ca920056458cc7b8e4c2ca87152954ea9e40b14a\",\"urls\":[\"bzz-raw://eb7de2c5923b414ef7d6aac3d7ca7f4295e39074542a4057fc25d8199ed412cb\",\"dweb:/ipfs/QmanLWy6gtkSon9N6HsEFViGEuH1JTxgovM6xjWS2GYnGk\"]}},\"version\":1}",
  "bytecode": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158200fdcabf314dc0397d341e07871986f807e265d869e650aebb36ae6f473f698b664736f6c63430005110032",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158200fdcabf314dc0397d341e07871986f807e265d869e650aebb36ae6f473f698b664736f6c63430005110032",
  "sourceMap": "231:3508:3:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "231:3508:3:-;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * NOTE: This call _does not revert_ if the signature is invalid, or\n     * if the signer is otherwise unable to be retrieved. In those scenarios,\n     * the zero address is returned.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        // Check the signature length\n        if (signature.length != 65) {\n            revert(\"ECDSA: signature length is invalid\");\n        }\n\n        // Divide the signature in r, s and v variables\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n\n        // ecrecover takes the signature parameters, and the only way to get them\n        // currently is to use assembly.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            r := mload(add(signature, 0x20))\n            s := mload(add(signature, 0x40))\n            v := byte(0, mload(add(signature, 0x60)))\n        }\n\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (281): 0 < s < secp256k1n ÷ 2 + 1, and for v in (282): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            revert(\"ECDSA: signature.s is in the wrong range\");\n        }\n\n        if (v != 27 && v != 28) {\n            revert(\"ECDSA: signature.v is in the wrong range\");\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        return ecrecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * replicates the behavior of the\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\n     * JSON-RPC method.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n}\n",
  "sourcePath": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
    "exportedSymbols": {
      "ECDSA": [
        313
      ]
    },
    "id": 314,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 235,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n * These functions can be used to verify that a message was signed by the holder\nof the private keys of a given address.",
        "fullyImplemented": true,
        "id": 313,
        "linearizedBaseContracts": [
          313
        ],
        "name": "ECDSA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "1313:1895:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "1365:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1365:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3635",
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1385:2:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_65_by_1",
                        "typeString": "int_const 65"
                      },
                      "value": "65"
                    },
                    "src": "1365:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 253,
                  "nodeType": "IfStatement",
                  "src": "1361:97:3",
                  "trueBody": {
                    "id": 252,
                    "nodeType": "Block",
                    "src": "1389:69:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "45434453413a207369676e6174757265206c656e67746820697320696e76616c6964",
                              "id": 249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1410:36:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b9558d77e0fe6f7c573e0ce7cf0533563e30fbdc9e1e9422e8cf2e86f600959d",
                                "typeString": "literal_string \"ECDSA: signature length is invalid\""
                              },
                              "value": "ECDSA: signature length is invalid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_b9558d77e0fe6f7c573e0ce7cf0533563e30fbdc9e1e9422e8cf2e86f600959d",
                                "typeString": "literal_string \"ECDSA: signature length is invalid\""
                              }
                            ],
                            "id": 248,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8699,
                              8700
                            ],
                            "referencedDeclaration": 8700,
                            "src": "1403:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1403:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 251,
                        "nodeType": "ExpressionStatement",
                        "src": "1403:44:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 255,
                      "name": "r",
                      "nodeType": "VariableDeclaration",
                      "scope": 295,
                      "src": "1524:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 254,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1524:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1524:9:3"
                },
                {
                  "assignments": [
                    258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 258,
                      "name": "s",
                      "nodeType": "VariableDeclaration",
                      "scope": 295,
                      "src": "1543:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 257,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1543:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 259,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1543:9:3"
                },
                {
                  "assignments": [
                    261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 261,
                      "name": "v",
                      "nodeType": "VariableDeclaration",
                      "scope": 295,
                      "src": "1562:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 260,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1562:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1562:7:3"
                },
                {
                  "externalReferences": [
                    {
                      "r": {
                        "declaration": 255,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1782:1:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "signature": {
                        "declaration": 239,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1797:9:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "s": {
                        "declaration": 258,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1827:1:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "signature": {
                        "declaration": 239,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1842:9:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "v": {
                        "declaration": 261,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1872:1:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "signature": {
                        "declaration": 239,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1895:9:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 263,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    r := mload(add(signature, 0x20))\n    s := mload(add(signature, 0x40))\n    v := byte(0, mload(add(signature, 0x60)))\n}",
                  "src": "1759:164:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 265,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "2819:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2811:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2811:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2824:66:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
                        "typeString": "int_const 5789...(69 digits omitted)...7168"
                      },
                      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
                    },
                    "src": "2811:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 274,
                  "nodeType": "IfStatement",
                  "src": "2807:160:3",
                  "trueBody": {
                    "id": 273,
                    "nodeType": "Block",
                    "src": "2892:75:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "45434453413a207369676e61747572652e7320697320696e207468652077726f6e672072616e6765",
                              "id": 270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2913:42:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d9016ffab4edef5eb84ddce8c30b8526481b9a7ae249122f57374a50bb4b3d9a",
                                "typeString": "literal_string \"ECDSA: signature.s is in the wrong range\""
                              },
                              "value": "ECDSA: signature.s is in the wrong range"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_d9016ffab4edef5eb84ddce8c30b8526481b9a7ae249122f57374a50bb4b3d9a",
                                "typeString": "literal_string \"ECDSA: signature.s is in the wrong range\""
                              }
                            ],
                            "id": 269,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8699,
                              8700
                            ],
                            "referencedDeclaration": 8700,
                            "src": "2906:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2906:50:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 272,
                        "nodeType": "ExpressionStatement",
                        "src": "2906:50:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 275,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "2981:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3237",
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2986:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_27_by_1",
                          "typeString": "int_const 27"
                        },
                        "value": "27"
                      },
                      "src": "2981:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 278,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "2992:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3238",
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2997:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_28_by_1",
                          "typeString": "int_const 28"
                        },
                        "value": "28"
                      },
                      "src": "2992:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2981:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 287,
                  "nodeType": "IfStatement",
                  "src": "2977:99:3",
                  "trueBody": {
                    "id": 286,
                    "nodeType": "Block",
                    "src": "3001:75:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "45434453413a207369676e61747572652e7620697320696e207468652077726f6e672072616e6765",
                              "id": 283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3022:42:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8348b9064abd70c26ec547454edf790f668da0a4aed9cfb6913bcbd2248c0f91",
                                "typeString": "literal_string \"ECDSA: signature.v is in the wrong range\""
                              },
                              "value": "ECDSA: signature.v is in the wrong range"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_8348b9064abd70c26ec547454edf790f668da0a4aed9cfb6913bcbd2248c0f91",
                                "typeString": "literal_string \"ECDSA: signature.v is in the wrong range\""
                              }
                            ],
                            "id": 282,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8699,
                              8700
                            ],
                            "referencedDeclaration": 8700,
                            "src": "3015:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3015:50:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 285,
                        "nodeType": "ExpressionStatement",
                        "src": "3015:50:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 289,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "3187:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 290,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "3193:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 291,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "3196:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "3199:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 288,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8686,
                      "src": "3177:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3177:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 243,
                  "id": 294,
                  "nodeType": "Return",
                  "src": "3170:31:3"
                }
              ]
            },
            "documentation": "@dev Returns the address that signed a hashed message (`hash`) with\n`signature`. This address can then be used for verification purposes.\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\nthis function rejects them by requiring the `s` value to be in the lower\nhalf order, and the `v` value to be either 27 or 28.\n     * NOTE: This call _does not revert_ if the signature is invalid, or\nif the signer is otherwise unable to be retrieved. In those scenarios,\nthe zero address is returned.\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\nverification to be secure: it is possible to craft signatures that\nrecover to arbitrary addresses for non-hashed data. A safe way to ensure\nthis is by receiving a hash of the original message (which may otherwise\nbe too long), and then calling {toEthSignedMessageHash} on it.",
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recover",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "1243:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "1257:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1242:38:3"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "1304:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1304:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1303:9:3"
            },
            "scope": 313,
            "src": "1226:1982:3",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "3550:187:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3688:34:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "argumentTypes": null,
                            "id": 307,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "3724:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 304,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8681,
                            "src": "3671:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3671:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3671:58:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 303,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8688,
                      "src": "3661:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3661:69:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 302,
                  "id": 310,
                  "nodeType": "Return",
                  "src": "3654:76:3"
                }
              ]
            },
            "documentation": "@dev Returns an Ethereum Signed Message, created from a `hash`. This\nreplicates the behavior of the\nhttps://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\nJSON-RPC method.\n     * See {recover}.",
            "id": 312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toEthSignedMessageHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "3504:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3504:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3503:14:3"
            },
            "returnParameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "3541:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3541:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3540:9:3"
            },
            "scope": 313,
            "src": "3472:265:3",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 314,
        "src": "231:3508:3"
      }
    ],
    "src": "0:3740:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
      "exportedSymbols": {
        "ECDSA": [
          313
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 235,
        "name": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "library",
          "documentation": "@dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n * These functions can be used to verify that a message was signed by the holder\nof the private keys of a given address.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            313
          ],
          "name": "ECDSA",
          "scope": 314
        },
        "children": [
          {
            "attributes": {
              "documentation": "@dev Returns the address that signed a hashed message (`hash`) with\n`signature`. This address can then be used for verification purposes.\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\nthis function rejects them by requiring the `s` value to be in the lower\nhalf order, and the `v` value to be either 27 or 28.\n     * NOTE: This call _does not revert_ if the signature is invalid, or\nif the signer is otherwise unable to be retrieved. In those scenarios,\nthe zero address is returned.\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\nverification to be secure: it is possible to craft signatures that\nrecover to arbitrary addresses for non-hashed data. A safe way to ensure\nthis is by receiving a hash of the original message (which may otherwise\nbe too long), and then calling {toEthSignedMessageHash} on it.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "recover",
              "scope": 313,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "hash",
                      "scope": 296,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 236,
                        "name": "ElementaryTypeName",
                        "src": "1243:7:3"
                      }
                    ],
                    "id": 237,
                    "name": "VariableDeclaration",
                    "src": "1243:12:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "signature",
                      "scope": 296,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 238,
                        "name": "ElementaryTypeName",
                        "src": "1257:5:3"
                      }
                    ],
                    "id": 239,
                    "name": "VariableDeclaration",
                    "src": "1257:22:3"
                  }
                ],
                "id": 240,
                "name": "ParameterList",
                "src": "1242:38:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 296,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 241,
                        "name": "ElementaryTypeName",
                        "src": "1304:7:3"
                      }
                    ],
                    "id": 242,
                    "name": "VariableDeclaration",
                    "src": "1304:7:3"
                  }
                ],
                "id": 243,
                "name": "ParameterList",
                "src": "1303:9:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 239,
                                  "type": "bytes memory",
                                  "value": "signature"
                                },
                                "id": 244,
                                "name": "Identifier",
                                "src": "1365:9:3"
                              }
                            ],
                            "id": 245,
                            "name": "MemberAccess",
                            "src": "1365:16:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "3635",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 65",
                              "value": "65"
                            },
                            "id": 246,
                            "name": "Literal",
                            "src": "1385:2:3"
                          }
                        ],
                        "id": 247,
                        "name": "BinaryOperation",
                        "src": "1365:22:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_b9558d77e0fe6f7c573e0ce7cf0533563e30fbdc9e1e9422e8cf2e86f600959d",
                                          "typeString": "literal_string \"ECDSA: signature length is invalid\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        8699,
                                        8700
                                      ],
                                      "referencedDeclaration": 8700,
                                      "type": "function (string memory) pure",
                                      "value": "revert"
                                    },
                                    "id": 248,
                                    "name": "Identifier",
                                    "src": "1403:6:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "45434453413a207369676e6174757265206c656e67746820697320696e76616c6964",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"ECDSA: signature length is invalid\"",
                                      "value": "ECDSA: signature length is invalid"
                                    },
                                    "id": 249,
                                    "name": "Literal",
                                    "src": "1410:36:3"
                                  }
                                ],
                                "id": 250,
                                "name": "FunctionCall",
                                "src": "1403:44:3"
                              }
                            ],
                            "id": 251,
                            "name": "ExpressionStatement",
                            "src": "1403:44:3"
                          }
                        ],
                        "id": 252,
                        "name": "Block",
                        "src": "1389:69:3"
                      }
                    ],
                    "id": 253,
                    "name": "IfStatement",
                    "src": "1361:97:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        255
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "r",
                          "scope": 295,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 254,
                            "name": "ElementaryTypeName",
                            "src": "1524:7:3"
                          }
                        ],
                        "id": 255,
                        "name": "VariableDeclaration",
                        "src": "1524:9:3"
                      }
                    ],
                    "id": 256,
                    "name": "VariableDeclarationStatement",
                    "src": "1524:9:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        258
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "s",
                          "scope": 295,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 257,
                            "name": "ElementaryTypeName",
                            "src": "1543:7:3"
                          }
                        ],
                        "id": 258,
                        "name": "VariableDeclaration",
                        "src": "1543:9:3"
                      }
                    ],
                    "id": 259,
                    "name": "VariableDeclarationStatement",
                    "src": "1543:9:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        261
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "v",
                          "scope": 295,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint8",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint8",
                              "type": "uint8"
                            },
                            "id": 260,
                            "name": "ElementaryTypeName",
                            "src": "1562:5:3"
                          }
                        ],
                        "id": 261,
                        "name": "VariableDeclaration",
                        "src": "1562:7:3"
                      }
                    ],
                    "id": 262,
                    "name": "VariableDeclarationStatement",
                    "src": "1562:7:3"
                  },
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "r": {
                            "declaration": 255,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1782:1:3",
                            "valueSize": 1
                          }
                        },
                        {
                          "signature": {
                            "declaration": 239,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1797:9:3",
                            "valueSize": 1
                          }
                        },
                        {
                          "s": {
                            "declaration": 258,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1827:1:3",
                            "valueSize": 1
                          }
                        },
                        {
                          "signature": {
                            "declaration": 239,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1842:9:3",
                            "valueSize": 1
                          }
                        },
                        {
                          "v": {
                            "declaration": 261,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1872:1:3",
                            "valueSize": 1
                          }
                        },
                        {
                          "signature": {
                            "declaration": 239,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1895:9:3",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{\n    r := mload(add(signature, 0x20))\n    s := mload(add(signature, 0x40))\n    v := byte(0, mload(add(signature, 0x60)))\n}"
                    },
                    "children": [],
                    "id": 263,
                    "name": "InlineAssembly",
                    "src": "1759:164:3"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 264,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2811:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 258,
                                  "type": "bytes32",
                                  "value": "s"
                                },
                                "id": 265,
                                "name": "Identifier",
                                "src": "2819:1:3"
                              }
                            ],
                            "id": 266,
                            "name": "FunctionCall",
                            "src": "2811:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 5789...(69 digits omitted)...7168",
                              "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
                            },
                            "id": 267,
                            "name": "Literal",
                            "src": "2824:66:3"
                          }
                        ],
                        "id": 268,
                        "name": "BinaryOperation",
                        "src": "2811:79:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_d9016ffab4edef5eb84ddce8c30b8526481b9a7ae249122f57374a50bb4b3d9a",
                                          "typeString": "literal_string \"ECDSA: signature.s is in the wrong range\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        8699,
                                        8700
                                      ],
                                      "referencedDeclaration": 8700,
                                      "type": "function (string memory) pure",
                                      "value": "revert"
                                    },
                                    "id": 269,
                                    "name": "Identifier",
                                    "src": "2906:6:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "45434453413a207369676e61747572652e7320697320696e207468652077726f6e672072616e6765",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"ECDSA: signature.s is in the wrong range\"",
                                      "value": "ECDSA: signature.s is in the wrong range"
                                    },
                                    "id": 270,
                                    "name": "Literal",
                                    "src": "2913:42:3"
                                  }
                                ],
                                "id": 271,
                                "name": "FunctionCall",
                                "src": "2906:50:3"
                              }
                            ],
                            "id": 272,
                            "name": "ExpressionStatement",
                            "src": "2906:50:3"
                          }
                        ],
                        "id": 273,
                        "name": "Block",
                        "src": "2892:75:3"
                      }
                    ],
                    "id": 274,
                    "name": "IfStatement",
                    "src": "2807:160:3"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "&&",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 261,
                                  "type": "uint8",
                                  "value": "v"
                                },
                                "id": 275,
                                "name": "Identifier",
                                "src": "2981:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3237",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 27",
                                  "value": "27"
                                },
                                "id": 276,
                                "name": "Literal",
                                "src": "2986:2:3"
                              }
                            ],
                            "id": 277,
                            "name": "BinaryOperation",
                            "src": "2981:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 261,
                                  "type": "uint8",
                                  "value": "v"
                                },
                                "id": 278,
                                "name": "Identifier",
                                "src": "2992:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3238",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 28",
                                  "value": "28"
                                },
                                "id": 279,
                                "name": "Literal",
                                "src": "2997:2:3"
                              }
                            ],
                            "id": 280,
                            "name": "BinaryOperation",
                            "src": "2992:7:3"
                          }
                        ],
                        "id": 281,
                        "name": "BinaryOperation",
                        "src": "2981:18:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_8348b9064abd70c26ec547454edf790f668da0a4aed9cfb6913bcbd2248c0f91",
                                          "typeString": "literal_string \"ECDSA: signature.v is in the wrong range\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        8699,
                                        8700
                                      ],
                                      "referencedDeclaration": 8700,
                                      "type": "function (string memory) pure",
                                      "value": "revert"
                                    },
                                    "id": 282,
                                    "name": "Identifier",
                                    "src": "3015:6:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "45434453413a207369676e61747572652e7620697320696e207468652077726f6e672072616e6765",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"ECDSA: signature.v is in the wrong range\"",
                                      "value": "ECDSA: signature.v is in the wrong range"
                                    },
                                    "id": 283,
                                    "name": "Literal",
                                    "src": "3022:42:3"
                                  }
                                ],
                                "id": 284,
                                "name": "FunctionCall",
                                "src": "3015:50:3"
                              }
                            ],
                            "id": 285,
                            "name": "ExpressionStatement",
                            "src": "3015:50:3"
                          }
                        ],
                        "id": 286,
                        "name": "Block",
                        "src": "3001:75:3"
                      }
                    ],
                    "id": 287,
                    "name": "IfStatement",
                    "src": "2977:99:3"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 243
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8686,
                              "type": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)",
                              "value": "ecrecover"
                            },
                            "id": 288,
                            "name": "Identifier",
                            "src": "3177:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 237,
                              "type": "bytes32",
                              "value": "hash"
                            },
                            "id": 289,
                            "name": "Identifier",
                            "src": "3187:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 261,
                              "type": "uint8",
                              "value": "v"
                            },
                            "id": 290,
                            "name": "Identifier",
                            "src": "3193:1:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 255,
                              "type": "bytes32",
                              "value": "r"
                            },
                            "id": 291,
                            "name": "Identifier",
                            "src": "3196:1:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 258,
                              "type": "bytes32",
                              "value": "s"
                            },
                            "id": 292,
                            "name": "Identifier",
                            "src": "3199:1:3"
                          }
                        ],
                        "id": 293,
                        "name": "FunctionCall",
                        "src": "3177:24:3"
                      }
                    ],
                    "id": 294,
                    "name": "Return",
                    "src": "3170:31:3"
                  }
                ],
                "id": 295,
                "name": "Block",
                "src": "1313:1895:3"
              }
            ],
            "id": 296,
            "name": "FunctionDefinition",
            "src": "1226:1982:3"
          },
          {
            "attributes": {
              "documentation": "@dev Returns an Ethereum Signed Message, created from a `hash`. This\nreplicates the behavior of the\nhttps://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\nJSON-RPC method.\n     * See {recover}.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "toEthSignedMessageHash",
              "scope": 313,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "hash",
                      "scope": 312,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 297,
                        "name": "ElementaryTypeName",
                        "src": "3504:7:3"
                      }
                    ],
                    "id": 298,
                    "name": "VariableDeclaration",
                    "src": "3504:12:3"
                  }
                ],
                "id": 299,
                "name": "ParameterList",
                "src": "3503:14:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 312,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 300,
                        "name": "ElementaryTypeName",
                        "src": "3541:7:3"
                      }
                    ],
                    "id": 301,
                    "name": "VariableDeclaration",
                    "src": "3541:7:3"
                  }
                ],
                "id": 302,
                "name": "ParameterList",
                "src": "3540:9:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 302
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8688,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 303,
                            "name": "Identifier",
                            "src": "3661:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                      "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8681,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 304,
                                    "name": "Identifier",
                                    "src": "3671:3:3"
                                  }
                                ],
                                "id": 305,
                                "name": "MemberAccess",
                                "src": "3671:16:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "string",
                                  "type": "literal_string \"\u0019Ethereum Signed Message:\n32\"",
                                  "value": "\u0019Ethereum Signed Message:\n32"
                                },
                                "id": 306,
                                "name": "Literal",
                                "src": "3688:34:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 298,
                                  "type": "bytes32",
                                  "value": "hash"
                                },
                                "id": 307,
                                "name": "Identifier",
                                "src": "3724:4:3"
                              }
                            ],
                            "id": 308,
                            "name": "FunctionCall",
                            "src": "3671:58:3"
                          }
                        ],
                        "id": 309,
                        "name": "FunctionCall",
                        "src": "3661:69:3"
                      }
                    ],
                    "id": 310,
                    "name": "Return",
                    "src": "3654:76:3"
                  }
                ],
                "id": 311,
                "name": "Block",
                "src": "3550:187:3"
              }
            ],
            "id": 312,
            "name": "FunctionDefinition",
            "src": "3472:265:3"
          }
        ],
        "id": 313,
        "name": "ContractDefinition",
        "src": "231:3508:3"
      }
    ],
    "id": 314,
    "name": "SourceUnit",
    "src": "0:3740:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-09-07T05:19:15.635Z",
  "devdoc": {
    "details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. * These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}